version: '3.8'

networks:
  document_agent_net:
    driver: bridge
    name: document_agent_net

# --- 在顶层定义默认的日志配置 ---
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m" # 单个文件最大10MB
    max-file: "1"   # 最多保留1个文件



services:
  # --- UserCenter Services ---
  usercenter-api:
    image: document-agent/usercenter-api:latest
    build:
      context: .
      dockerfile: app/usercenter/cmd/api/dockerfile
    container_name: usercenter-api
    ports:
      - "8000:8000"
    networks:
      - document_agent_net
    depends_on:
      - usercenter-rpc
      - etcd
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./deploy/etc/usercenterapi.yaml:/app/etc/usercenter.yaml
    logging: *default-logging
    restart: always

  usercenter-rpc:
    image: document-agent/usercenter-rpc:latest
    build:
      context: .
      dockerfile: app/usercenter/cmd/rpc/dockerfile
    container_name: usercenter-rpc
    networks:
      - document_agent_net
    depends_on:
      - mysql
      - etcd
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./deploy/etc/usercenterrpc.yaml:/app/etc/usercenter.yaml
    logging: *default-logging
    restart: always

  # --- LLMCenter Services ---
  llmcenter-api:
    image: document-agent/llmcenter-api:latest
    build:
      context: .
      dockerfile: app/llmcenter/cmd/api/dockerfile
    container_name: llmcenter-api
    ports:
      - "8002:8002"
    networks:
      - document_agent_net
    depends_on:
      - llmcenter-rpc
      - etcd
    volumes:
      - ./deploy/etc/llmcenterapi.yaml:/app/etc/llmcenter.yaml
      - ./data/static:/app/data/static
    environment:
      - TZ=Asia/Shanghai
    logging: *default-logging
    restart: always

  llmcenter-rpc:
    image: document-agent/llmcenter-rpc:latest
    build:
      context: .
      dockerfile: app/llmcenter/cmd/rpc/dockerfile
    container_name: llmcenter-rpc
    networks:
      - document_agent_net
    depends_on:
      # 将原来的 depends_on 格式改为 long syntax
      redis:
        condition: service_healthy # 等待 redis 服务健康
      # 其他依赖也建议这样做，例如 mysql
      mysql:
        condition: service_started
      etcd:
        condition: service_started
    volumes:
      # 同样挂载，确保 RPC 服务能访问到 API 服务上传的文件
      - ./deploy/etc/llmcenterrpc.yaml:/app/etc/llmcenter.yaml
      - ./data/static:/app/data/static
      # 自定义中文字体（可选），容器内放在 /usr/share/fonts/custom
      - ./deploy/static/fonts:/usr/share/fonts/custom:ro
    environment:
      - TZ=Asia/Shanghai
    logging: *default-logging
    restart: always

  # --- Infrastructure Services ---
  mysql:
    image: docker.m.daocloud.io/mysql/mysql-server:8.0.28
    container_name: mysql
    # ports:
    #   - "3306:3306"
    networks:
      - document_agent_net
    env_file:
      - ./deploy/docker/mysql_root_password.txt
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./deploy/sql:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    command:
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-time-zone=Asia/Shanghai
    logging: *default-logging
    restart: always

  redis:
    image: docker.m.daocloud.io/redis:6.2.5
    container_name: redis
    # ports:
    #   - "6379:6379"
    networks:
      - document_agent_net
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"] # 使用 redis-cli ping 命令检查
      interval: 10s # 每10秒检查一次
      timeout: 5s   # 5秒内没响应算失败
      retries: 5    # 重试5次后宣告不健康
    logging: *default-logging
    restart: always

  etcd:
    image: docker.m.daocloud.io/bitnami/etcd:3.5.15
    container_name: etcd
    networks:
      - document_agent_net
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    logging: *default-logging
    restart: always

  # --- Swagger UI Service ---
  swagger-ui:
    image: docker.m.daocloud.io/swaggerapi/swagger-ui
    container_name: swagger-ui
    # ports:
    #   - "8002:8080"
    networks:
      - document_agent_net
    volumes:
      # 将存放 swagger json 文件的目录挂载到容器中
      - ./deploy/swagger:/usr/share/nginx/html/swagger-files
    environment:
      # 这里配置你的 swagger json 文件，可以有多个
      # url: 是容器内的路径，name: 是在UI下拉菜单中显示的名字
      # !!! 请将下面的 usercenter.json 和 llmcenter.json 替换为您实际的文件名 !!!
      URLS: "[ { url: '/swagger-files/usercenter.json', name: '用户中心 API' }, { url: '/swagger-files/llmcenter.json', name: '大模型中心 API' } ]"
    restart: always

volumes:
  mysql-data:
  redis-data:
