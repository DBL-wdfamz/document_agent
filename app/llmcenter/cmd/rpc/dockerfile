# ---- Builder Stage ----
# 使用官方的 Go Alpine 镜像作为构建环境
FROM golang:1.23-alpine AS builder

# 设置工作目录
WORKDIR /app

# 复制 go.mod 和 go.sum 文件并下载依赖
# 这样可以利用 Docker 的层缓存机制
COPY go.mod go.sum ./
# 设置GOPROXY为国内镜像，并执行 go mod download
RUN go env -w GOPROXY=https://goproxy.cn,direct \
    && go mod download

# 复制所有源代码
COPY . .

# 编译 RPC 服务为静态链接的二进制文件
# CGO_ENABLED=0 禁用 CGO
# -ldflags="-s -w" 去除调试信息，减小体积
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -o llmcenter-rpc app/llmcenter/cmd/rpc/llmcenter.go

# ---- Final Stage ----
# 使用轻量的 Alpine 镜像作为最终镜像
FROM alpine:latest

# 关键：安装时区数据
RUN apk add --no-cache tzdata

# 设置工作目录
WORKDIR /app

# 从 builder 阶段复制编译好的二进制文件
COPY --from=builder /app/llmcenter-rpc .

# 暴露 RPC 服务端口
EXPOSE 8011

# 容器启动命令
CMD ["./llmcenter-rpc", "-f", "etc/llmcenter.yaml"]