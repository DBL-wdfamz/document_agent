# ---- Builder ----
FROM golang:1.24-alpine AS builder
WORKDIR /app
COPY go.mod go.sum ./
RUN go env -w GOPROXY=https://goproxy.cn,direct && go mod download
COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -o llmcenter-rpc app/llmcenter/cmd/rpc/llmcenter.go

# ---- Runtime Stage ----
FROM ubuntu:22.04

# 设置为非交互模式，避免安装过程中断
ENV DEBIAN_FRONTEND=noninteractive

# 1. 安装最基础的系统依赖，这一层变动频率最低
RUN sed -i 's|http://archive.ubuntu.com/ubuntu/|http://mirrors.tuna.tsinghua.edu.cn/ubuntu/|g' /etc/apt/sources.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    tzdata \
    wget \
    fontconfig && \
    rm -rf /var/lib/apt/lists/*

# 2. 安装 pandoc 相关依赖，这是一个独立的、可缓存的大图层
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    pandoc \
    texlive-xetex \
    texlive-lang-chinese \
    texlive-fonts-recommended \
    lmodern \
    fonts-noto-cjk && \
    texhash && \
    rm -rf /var/lib/apt/lists/*

# 3. 安装 OCR 相关依赖并下载数据模型，这是一个独立的 OCR 图层
RUN apt-get update && \
    apt-get install -y --no-install-recommends tesseract-ocr && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /usr/share/tessdata && \
    wget -q -O /usr/share/tessdata/chi_sim.traineddata https://github.com/tesseract-ocr/tessdata/raw/main/chi_sim.traineddata && \
    wget -q -O /usr/share/tessdata/eng.traineddata     https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata

WORKDIR /app

# 4. 拷贝配置文件和静态资源。这些文件变动频率低于应用代码
RUN mkdir -p /app/etc /app/data/static
COPY deploy/etc/llmcenterrpc.yaml /app/etc/llmcenter.yaml
COPY app/llmcenter/cmd/data/static /app/data/static

# 5. 最后拷贝编译产物，这是变动最频繁的部分
COPY --from=builder /app/llmcenter-rpc .

EXPOSE 8003

# 覆盖基础镜像的 ENTRYPOINT，以确保 CMD 能独立运行
ENTRYPOINT [""]
# 使用绝对路径加载配置
CMD ["./llmcenter-rpc", "-f", "/app/etc/llmcenter.yaml"]