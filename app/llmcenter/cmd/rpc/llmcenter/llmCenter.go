// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: llmcenter.proto

package llmcenter

import (
	"context"

	"document_agent/app/llmcenter/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChatCompletionsRequest        = pb.ChatCompletionsRequest
	ChatCompletionsResponse       = pb.ChatCompletionsResponse
	ChatResumeRequest             = pb.ChatResumeRequest
	ChatResumeResponse            = pb.ChatResumeResponse
	Conversation                  = pb.Conversation
	FileInfo                      = pb.FileInfo
	FileUploadRequest             = pb.FileUploadRequest
	FileUploadResponse            = pb.FileUploadResponse
	GetConversationDetailRequest  = pb.GetConversationDetailRequest
	GetConversationDetailResponse = pb.GetConversationDetailResponse
	GetConversationsRequest       = pb.GetConversationsRequest
	GetConversationsResponse      = pb.GetConversationsResponse
	Message                       = pb.Message
	Reference                     = pb.Reference
	SSEEndEvent                   = pb.SSEEndEvent
	SSEInterruptEvent             = pb.SSEInterruptEvent
	SSEMessageEvent               = pb.SSEMessageEvent

	LlmCenter interface {
		// RPC 方法: ChatCompletions
		ChatCompletions(ctx context.Context, in *ChatCompletionsRequest, opts ...grpc.CallOption) (pb.LlmCenter_ChatCompletionsClient, error)
		// RPC 方法: ChatResume
		ChatResume(ctx context.Context, in *ChatResumeRequest, opts ...grpc.CallOption) (pb.LlmCenter_ChatResumeClient, error)
		// RPC 方法: FileUpload
		FileUpload(ctx context.Context, opts ...grpc.CallOption) (pb.LlmCenter_FileUploadClient, error)
		// RPC 方法: GetConversations
		GetConversations(ctx context.Context, in *GetConversationsRequest, opts ...grpc.CallOption) (*GetConversationsResponse, error)
		// RPC 方法: GetConversationDetail
		GetConversationDetail(ctx context.Context, in *GetConversationDetailRequest, opts ...grpc.CallOption) (*GetConversationDetailResponse, error)
	}

	defaultLlmCenter struct {
		cli zrpc.Client
	}
)

func NewLlmCenter(cli zrpc.Client) LlmCenter {
	return &defaultLlmCenter{
		cli: cli,
	}
}

// RPC 方法: ChatCompletions
func (m *defaultLlmCenter) ChatCompletions(ctx context.Context, in *ChatCompletionsRequest, opts ...grpc.CallOption) (pb.LlmCenter_ChatCompletionsClient, error) {
	client := pb.NewLlmCenterClient(m.cli.Conn())
	return client.ChatCompletions(ctx, in, opts...)
}

// RPC 方法: ChatResume
func (m *defaultLlmCenter) ChatResume(ctx context.Context, in *ChatResumeRequest, opts ...grpc.CallOption) (pb.LlmCenter_ChatResumeClient, error) {
	client := pb.NewLlmCenterClient(m.cli.Conn())
	return client.ChatResume(ctx, in, opts...)
}

// RPC 方法: FileUpload
func (m *defaultLlmCenter) FileUpload(ctx context.Context, opts ...grpc.CallOption) (pb.LlmCenter_FileUploadClient, error) {
	client := pb.NewLlmCenterClient(m.cli.Conn())
	return client.FileUpload(ctx, opts...)
}

// RPC 方法: GetConversations
func (m *defaultLlmCenter) GetConversations(ctx context.Context, in *GetConversationsRequest, opts ...grpc.CallOption) (*GetConversationsResponse, error) {
	client := pb.NewLlmCenterClient(m.cli.Conn())
	return client.GetConversations(ctx, in, opts...)
}

// RPC 方法: GetConversationDetail
func (m *defaultLlmCenter) GetConversationDetail(ctx context.Context, in *GetConversationDetailRequest, opts ...grpc.CallOption) (*GetConversationDetailResponse, error) {
	client := pb.NewLlmCenterClient(m.cli.Conn())
	return client.GetConversationDetail(ctx, in, opts...)
}
