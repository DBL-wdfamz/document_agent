// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: llmcenter.proto

package server

import (
	"context"

	"document_agent/app/llmcenter/cmd/rpc/internal/logic"
	"document_agent/app/llmcenter/cmd/rpc/internal/svc"
	"document_agent/app/llmcenter/cmd/rpc/pb"
)

type LlmCenterServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedLlmCenterServer
}

func NewLlmCenterServer(svcCtx *svc.ServiceContext) *LlmCenterServer {
	return &LlmCenterServer{
		svcCtx: svcCtx,
	}
}

// RPC 方法: ChatCompletions
func (s *LlmCenterServer) ChatCompletions(in *pb.ChatCompletionsRequest, stream pb.LlmCenter_ChatCompletionsServer) error {
	l := logic.NewChatCompletionsLogic(stream.Context(), s.svcCtx)
	return l.ChatCompletions(in, stream)
}

// RPC 方法: ChatResume
func (s *LlmCenterServer) ChatResume(in *pb.ChatResumeRequest, stream pb.LlmCenter_ChatResumeServer) error {
	l := logic.NewChatResumeLogic(stream.Context(), s.svcCtx)
	return l.ChatResume(in, stream)
}

// RPC 方法: FileUpload
func (s *LlmCenterServer) FileUpload(stream pb.LlmCenter_FileUploadServer) error {
	l := logic.NewFileUploadLogic(stream.Context(), s.svcCtx)
	return l.FileUpload(stream)
}

// RPC 方法: GetConversations
func (s *LlmCenterServer) GetConversations(ctx context.Context, in *pb.GetConversationsRequest) (*pb.GetConversationsResponse, error) {
	l := logic.NewGetConversationsLogic(ctx, s.svcCtx)
	return l.GetConversations(in)
}

// RPC 方法: GetConversationDetail
func (s *LlmCenterServer) GetConversationDetail(ctx context.Context, in *pb.GetConversationDetailRequest) (*pb.GetConversationDetailResponse, error) {
	l := logic.NewGetConversationDetailLogic(ctx, s.svcCtx)
	return l.GetConversationDetail(in)
}

// RPC 方法: GetDocumentDetail
func (s *LlmCenterServer) GetDocumentDetail(ctx context.Context, in *pb.GetDocumentDetailRequest) (*pb.GetDocumentDetailResponse, error) {
	l := logic.NewGetDocumentDetailLogic(ctx, s.svcCtx)
	return l.GetDocumentDetail(in)
}

// RPC 方法: GetHistoryData
func (s *LlmCenterServer) GetHistoryData(ctx context.Context, in *pb.GetHistoryDataRequest) (*pb.GetHistoryDataResponse, error) {
	l := logic.NewGetHistoryDataLogic(ctx, s.svcCtx)
	return l.GetHistoryData(in)
}

// RPC 方法: EditDocumentRequest
func (s *LlmCenterServer) EditDocument(in *pb.EditDocumentRequest, stream pb.LlmCenter_EditDocumentServer) error {
	l := logic.NewEditDocumentLogic(stream.Context(), s.svcCtx)
	return l.EditDocument(in, stream)
}
