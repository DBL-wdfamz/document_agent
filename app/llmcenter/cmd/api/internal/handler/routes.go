// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package handler

import (
	"net/http"

	chat "document_agent/app/llmcenter/cmd/api/internal/handler/chat"
	conversation "document_agent/app/llmcenter/cmd/api/internal/handler/conversation"
	file "document_agent/app/llmcenter/cmd/api/internal/handler/file"
	"document_agent/app/llmcenter/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 发起新对话或在现有对话中发送消息
				Method:  http.MethodPost,
				Path:    "/chat/completions",
				Handler: chat.ChatCompletionsHandler(serverCtx),
			},
			{
				// 在工作流中断后, 发送用户编辑好的内容以继续流程
				Method:  http.MethodPost,
				Path:    "/chat/resume",
				Handler: chat.ChatResumeHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/llmcenter/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 获取当前用户的会话列表
				Method:  http.MethodGet,
				Path:    "/conversations",
				Handler: conversation.GetConversationsHandler(serverCtx),
			},
			{
				// 获取指定会话的详细历史消息
				Method:  http.MethodGet,
				Path:    "/conversations/:conversation_id",
				Handler: conversation.GetConversationDetailHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/llmcenter/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 上传文件, 用于后续对话
				Method:  http.MethodPost,
				Path:    "/files/upload",
				Handler: file.FileUploadHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/llmcenter/v1"),
	)
}
